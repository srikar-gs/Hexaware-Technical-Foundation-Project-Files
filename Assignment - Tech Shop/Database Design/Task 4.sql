use TechShop
/*1. Write an SQL query to find out which customers have not placed any orders.*/
SELECT 
	C.FirstName,
	C.LastName,
	C.Email,
	C.Phone,
	C.Address
FROM Customers C
WHERE C.CustomerID NOT IN(
	SELECT CustomerID
	FROM Orders)

/*2. Write an SQL query to find the total number of products available for sale. */
select 
coalesce(ProductName,'TotalProducts')as ProductName , sum(QuantityInStock) as QuantityAvailable
from products,Inventory
where products.productID=Inventory.productID 
group by rollup (ProductName);


select * from Inventory

/*3. Write an SQL query to calculate the total revenue generated by TechShop. */
SELECT SUM(O.TotalAmount) TotalRevenue FROM Orders O
JOIN Customers C ON C.CustomerID = O.CustomerID

/*4. Write an SQL query to calculate the average quantity ordered for products in a specific category.
Allow users to input the category name as a parameter.*/

SELECT CategoryName, AverageQuantity AS OverallAverageQuantity
FROM (
    SELECT P.Category AS CategoryName, AVG(OD.Quantity) AS AverageQuantity
    FROM OrderDetails OD
    JOIN Products P ON P.ProductID = OD.ProductID
    WHERE P.Category = 'Electronics' 
    GROUP BY P.Category 
) AS SubqueryResult


/*5. . Write an SQL query to calculate the total revenue generated by a specific customer. Allow users
to input the customer ID as a parameter.*/
DECLARE @CustomerID INT = 13
SELECT 
	CustomerID, FirstName, LastName, TotalRevenue 
FROM(
	SELECT C.CustomerID, C.FirstName, C.LastName, SUM(O.TotalAmount) TotalRevenue FROM Customers C
	JOIN Orders O ON O.CustomerID = C.CustomerID
	WHERE O.CustomerID = @CustomerID
	GROUP BY C.CustomerID, C.FirstName, C.LastName) AS CustomerRevenue;

use TechShop
/*6. Write an SQL query to find the customers who have placed the most orders. List their names
and the number of orders they've placed.*/
WITH OrderCount AS(
	SELECT 
		C.CustomerID,
		C.FirstName,
		C.LastName,
		COUNT(O.OrderID) NoOfOrders
	FROM Customers C
	JOIN Orders O ON O.CustomerID = C.CustomerID
	GROUP BY C.CustomerID, C.FirstName, C.LastName
)
SELECT CustomerID, FirstName, LastName, NoOfOrders FROM OrderCount
WHERE NoOfOrders = (SELECT MAX(NoOfOrders) FROM OrderCount);


/*7. Write an SQL query to find the most popular product category, which is the one with the highest
total quantity ordered across all orders.
*/
SELECT TOP 1 P.ProductName, SUM(Quantity) Quantity FROM OrderDetails OD
JOIN Products P ON P.ProductID = OD.ProductID
GROUP BY P.ProductName
ORDER BY Quantity DESC;

/*8. Write an SQL query to find the customer who has spent the most money (highest total revenue)
on electronic gadgets. List their name and total spending.*/
SELECT TOP 1
	C.FirstName+' '+C.LastName CustomerName,
	O.TotalAmount
FROM Customers C
JOIN Orders O ON O.CustomerID = C.CustomerID
ORDER BY O.TotalAmount DESC;

/*9. Write an SQL query to calculate the average order value (total revenue divided by the number of
orders) for all customers.*/
WITH OrderValue AS(
SELECT
	O.CustomerID,
	C.FirstName+' '+C.LastName AS CustomerName,
	SUM(O.TotalAmount) AS TotalRevenue,
	COUNT(O.OrderID) AS NoOfOrders
FROM Orders O
RIGHT JOIN Customers C ON C.CustomerID = O.CustomerID
GROUP BY O.CustomerID, C.FirstName, C.LastName)
SELECT 
	OV.CustomerID, 
	OV.CustomerName,
	AVG(OV.TotalRevenue/OV.NoOfOrders) AS AvgOrderValue
FROM OrderValue OV
GROUP BY OV.CustomerID, OV.CustomerName;

/*10. Write an SQL query to find the total number of orders placed by each customer and list their
names along with the order count.*/
SELECT 
	C.FirstName,
	COUNT(O.OrderID) TotalOrders
FROM Customers C
JOIN Orders O ON O.CustomerID = C.CustomerID
GROUP BY C.FirstName
ORDER BY TotalOrders DESC;